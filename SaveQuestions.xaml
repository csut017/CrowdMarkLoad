<Activity mc:Ignorable="sap sap2010" x:Class="SaveQuestions" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.uipath.com/workflow/activities/word" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:upap="clr-namespace:UiPath.PDF.Activities.PDF;assembly=UiPath.PDF.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="startPage" Type="InArgument(x:Int32)" />
    <x:Property Name="endPage" Type="InArgument(x:String)" />
    <x:Property Name="submissionsWorkFolder" Type="InArgument(x:String)" />
    <x:Property Name="studentID" Type="InArgument(x:String)" />
    <x:Property Name="assignmentID" Type="InArgument(x:String)" />
    <x:Property Name="questionNumber" Type="InArgument(x:Int32)" />
    <x:Property Name="studentFolder" Type="InArgument(x:String)" />
    <x:Property Name="filename" Type="InArgument(x:String)" />
  </x:Members>
  <this:SaveQuestions.submissionsWorkFolder>
    <InArgument x:TypeArguments="x:String" />
  </this:SaveQuestions.submissionsWorkFolder>
  <this:SaveQuestions.studentID>
    <InArgument x:TypeArguments="x:String" />
  </this:SaveQuestions.studentID>
  <this:SaveQuestions.assignmentID>
    <InArgument x:TypeArguments="x:String" />
  </this:SaveQuestions.assignmentID>
  <this:SaveQuestions.questionNumber>
    <InArgument x:TypeArguments="x:Int32" />
  </this:SaveQuestions.questionNumber>
  <this:SaveQuestions.studentFolder>
    <InArgument x:TypeArguments="x:String" />
  </this:SaveQuestions.studentFolder>
  <this:SaveQuestions.filename>
    <InArgument x:TypeArguments="x:String" />
  </this:SaveQuestions.filename>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1171,991</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>SaveQuestions_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="54">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Word</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.PDF.Activities.PDF</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>UiPath.Word.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="19">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Word.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This workflow will extract all the pages from a submission and save them.&#xD;&#xA;It also handles the check for a file submission instead of a text answer." DisplayName="SaveQuestions" sap:VirtualizedContainerService.HintSize="1578,1554" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="rangeStatement" />
      <Variable x:TypeArguments="s:String[]" Name="existingFiles" />
      <Variable x:TypeArguments="x:String" Name="outputFilename" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign sap2010:Annotation.AnnotationText="Generate the range statement for the pages to extract." DisplayName="Generate range statement" sap:VirtualizedContainerService.HintSize="1536,102" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[rangeStatement]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[IIf(endPage = startPage.ToString, startPage.ToString, startPage.ToString + "-" + endPage).tostring]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <Assign DisplayName="Check if an existing file exists" sap:VirtualizedContainerService.HintSize="1536,60" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[existingFiles]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(submissionsWorkFolder, studentID + "_" + assignmentID + "_" + questionNumber.ToString + ".*", SearchOption.TopDirectoryOnly)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Generate output file name" sap:VirtualizedContainerService.HintSize="1536,60" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[outputFilename]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[Path.Combine(studentFolder, questionNumber.ToString + ".pdf")]</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[existingFiles.Any]" DisplayName="If the download exists, use this instead of the PDF" sap:VirtualizedContainerService.HintSize="1536,1078" sap2010:WorkflowViewState.IdRef="If_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence DisplayName="Use existing download" sap:VirtualizedContainerService.HintSize="1115,930" sap2010:WorkflowViewState.IdRef="Sequence_5">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="fileExtension" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap2010:Annotation.AnnotationText="CrowdMark cannot handle docx files, therefore we need to export them to a PDF for upload." DisplayName="Retrieve file extension" sap:VirtualizedContainerService.HintSize="1073,117" sap2010:WorkflowViewState.IdRef="Assign_4">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[fileExtension]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[Path.GetExtension( existingFiles(0))]</InArgument>
            </Assign.Value>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Assign>
          <If Condition="[fileExtension.ToLower = &quot;.docx&quot;]" DisplayName="Check for docx file" sap:VirtualizedContainerService.HintSize="1073,681" sap2010:WorkflowViewState.IdRef="If_1">
            <If.Then>
              <Sequence DisplayName="Convert Word to PDF" sap:VirtualizedContainerService.HintSize="552,533" sap2010:WorkflowViewState.IdRef="Sequence_3">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <p:WordApplicationScope DisplayName="Connect to Word" FilePath="[existingFiles(0)]" sap:VirtualizedContainerService.HintSize="510,441" sap2010:WorkflowViewState.IdRef="WordApplicationScope_1">
                  <p:WordApplicationScope.Body>
                    <ActivityAction x:TypeArguments="ui:WordDocument">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:WordDocument" Name="WordDocumentScope" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="476,332" sap2010:WorkflowViewState.IdRef="Sequence_2">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="Log PDF export" sap:VirtualizedContainerService.HintSize="434,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Trace" Message="[&quot;Exporting &quot; + existingFiles(0) + &quot; to &quot; + outputFilename]" />
                        <p:WordExportToPdf DisplayName="Save Document as PDF" FilePath="[outputFilename]" sap:VirtualizedContainerService.HintSize="434,109" sap2010:WorkflowViewState.IdRef="WordExportToPdf_1" />
                      </Sequence>
                    </ActivityAction>
                  </p:WordApplicationScope.Body>
                </p:WordApplicationScope>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence DisplayName="Copy file to output folder" sap:VirtualizedContainerService.HintSize="476,480" sap2010:WorkflowViewState.IdRef="Sequence_4">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign DisplayName="Update the extension to match the actual extension" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[outputFilename]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[Path.ChangeExtension(outputFilename, fileExtension)]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:LogMessage DisplayName="Log question copy" sap:VirtualizedContainerService.HintSize="434,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Trace" Message="[&quot;Copying &quot; + existingFiles(0) + &quot; to &quot; + outputFilename]" />
                <ui:CopyFile ContinueOnError="{x:Null}" Destination="[outputFilename]" DisplayName="Copy existing answer" sap:VirtualizedContainerService.HintSize="434,157" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="False" Path="[existingFiles(0)]" />
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="Extract pages as answer" sap:VirtualizedContainerService.HintSize="376,352" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log question extraction" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Trace" Message="[&quot;Extracting &quot; + outputFilename]" />
          <upap:ExtractPDFPageRange sap2010:Annotation.AnnotationText="This activity is where the fun happens: we extract the relevant pages and save them as a new PDF." DisplayName="Extract question pages" FileName="[filename]" sap:VirtualizedContainerService.HintSize="334,129" sap2010:WorkflowViewState.IdRef="ExtractPDFPageRange_1" OutputFileName="[outputFilename]" Range="[rangeStatement]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </upap:ExtractPDFPageRange>
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>