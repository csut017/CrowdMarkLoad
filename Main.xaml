<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1404,3754" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="33">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="29">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This sequence is the main workflow for the process." DisplayName="Main Workflow" sap:VirtualizedContainerService.HintSize="1414,3649" sap2010:WorkflowViewState.IdRef="Sequence_4">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="validationState" />
      <Variable x:TypeArguments="x:String" Name="submissionFilePath" />
      <Variable x:TypeArguments="x:Int32" Name="numberOfAnswers" />
      <Variable x:TypeArguments="x:String" Name="processMode" />
      <Variable x:TypeArguments="x:String" Name="options" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Process Start" sap:VirtualizedContainerService.HintSize="1372,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Starting CrowdMark upload process&quot;]" />
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="This workflow is responsible for checking the initial state and loading all the configuration settings." DisplayName="Validate the Starting State" sap:VirtualizedContainerService.HintSize="1372,154" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="ValidateStartingState.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <OutArgument x:TypeArguments="x:Boolean" x:Key="result">[validationState]</OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="configFile">C:\temp\CrowdMarkImportSettings.txt</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="submissionFilePath">[submissionFilePath]</OutArgument>
        <OutArgument x:TypeArguments="x:Int32" x:Key="numberOfAnswers">[numberOfAnswers]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="processMode">[processMode]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="prepareOptions">[options]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <If Condition="[validationState]" DisplayName="Check Validation Was Successful" sap:VirtualizedContainerService.HintSize="1372,3070" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Sequence sap2010:Annotation.AnnotationText="The validation was successful, time to process and upload the submissions." DisplayName="Validated State Actions" sap:VirtualizedContainerService.HintSize="951,2912" sap2010:WorkflowViewState.IdRef="Sequence_5">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="uploadTrackingFile" />
            <Variable x:TypeArguments="x:String" Name="submissionsWorkFolder" />
            <Variable x:TypeArguments="sd:DataTable" Name="allSubmissions" />
            <Variable x:TypeArguments="x:Int32" Default="0" Name="numberToSkip" />
            <Variable x:TypeArguments="x:Int32" Default="[Int32.MaxValue]" Name="numberToProcess" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Start of Processing" sap:VirtualizedContainerService.HintSize="909,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Starting submission processing&quot;]" />
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="This workflow will extract all the files from the download zip and prepare them for importing into CrowdMark." DisplayName="Process Download File" sap:VirtualizedContainerService.HintSize="909,169" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="ProcessDownload.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="submissionFilePath">[submissionFilePath]</InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="submissionsWorkFolder">[submissionsWorkFolder]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="uploadTrackingFile">[uploadTrackingFile]</OutArgument>
              <OutArgument x:TypeArguments="sd:DataTable" x:Key="students">[allSubmissions]</OutArgument>
              <InArgument x:TypeArguments="x:String" x:Key="options">[options]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
          <Sequence DisplayName="Generate processing numbers" sap:VirtualizedContainerService.HintSize="909,66" sap2010:WorkflowViewState.IdRef="Sequence_15">
            <Sequence.Variables>
              <Variable x:TypeArguments="s:String[]" Name="splitOptions" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Split processing options" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_4">
              <Assign.To>
                <OutArgument x:TypeArguments="s:String[]">[splitOptions]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="s:String[]">[options.Split({":"}, StringSplitOptions.RemoveEmptyEntries)]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[splitOptions.Count &gt; 0]" DisplayName="Generate number to skip" sap:VirtualizedContainerService.HintSize="484,329" sap2010:WorkflowViewState.IdRef="If_4">
              <If.Then>
                <Sequence DisplayName="Convert the input skip value" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_11">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="variable1" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Convert skip string to int" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[numberToSkip]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[Int32.Parse(splitOptions(0))]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_12">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
            <If Condition="[splitOptions.Count &gt; 1]" DisplayName="Generate number to process" sap:VirtualizedContainerService.HintSize="484,329" sap2010:WorkflowViewState.IdRef="If_5">
              <If.Then>
                <Sequence DisplayName="Convert the input skip value" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_13">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Convert skip string to int" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[numberToProcess]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[Int32.Parse(splitOptions(1))]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_14">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
          <If sap2010:Annotation.AnnotationText="Currently we only have two modes: FULL and PREPARE, but in future we might add more." Condition="[processMode=&quot;FULL&quot;]" DisplayName="Allow for different process modes" sap:VirtualizedContainerService.HintSize="909,2212" sap2010:WorkflowViewState.IdRef="If_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence DisplayName="Perform a full upload" sap:VirtualizedContainerService.HintSize="873,2004" sap2010:WorkflowViewState.IdRef="Sequence_10">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:Int32" Name="index" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="[index]" DataTable="[allSubmissions]" DisplayName="Upload all submissions" sap:VirtualizedContainerService.HintSize="831,1912" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="submission" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Process submission" sap:VirtualizedContainerService.HintSize="797,1792" sap2010:WorkflowViewState.IdRef="Sequence_8">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="outcome" />
                          <Variable x:TypeArguments="x:Int32" Name="studentID" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If Condition="[index &lt; numberToSkip]" DisplayName="Check if the row should be processed" sap:VirtualizedContainerService.HintSize="755,291" sap2010:WorkflowViewState.IdRef="If_6">
                          <If.Then>
                            <Sequence DisplayName="Skip the row if it is within the skip range" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_16">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:Continue sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Continue_1" />
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_17">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Sequence>
                          </If.Else>
                        </If>
                        <If Condition="[index &gt;= (numberToProcess + numberToSkip)]" DisplayName="Check if we have finished processed" sap:VirtualizedContainerService.HintSize="755,291" sap2010:WorkflowViewState.IdRef="If_7">
                          <If.Then>
                            <Sequence DisplayName="Exit the loop if we have processed sufficient" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_18">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:Break sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Break_1" />
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_19">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Sequence>
                          </If.Else>
                        </If>
                        <Assign DisplayName="Get student ID" sap:VirtualizedContainerService.HintSize="755,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[studentID]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[int32.Parse(submission.Item(0).ToString)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <If Condition="[string.IsNullOrEmpty(submission.Item(&quot;Status&quot;).ToString)]" sap:VirtualizedContainerService.HintSize="755,938" sap2010:WorkflowViewState.IdRef="If_2">
                          <If.Then>
                            <Sequence DisplayName="Process submission actions" sap:VirtualizedContainerService.HintSize="376,780" sap2010:WorkflowViewState.IdRef="Sequence_9">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:String" Name="processedAnswers" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage DisplayName="Log process submission" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Uploading submission for &quot; + studentID.ToString]" />
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Upload submission" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="ImportSubmission.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:Int32" x:Key="studentId">[studentID]</InArgument>
                                  <OutArgument x:TypeArguments="x:String" x:Key="outcome">[outcome]</OutArgument>
                                  <InArgument x:TypeArguments="x:Int32" x:Key="numberOfAnswers">[numberOfAnswers]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="submissionsWorkFolder">[submissionsWorkFolder]</InArgument>
                                  <OutArgument x:TypeArguments="x:String" x:Key="updatedAnswers">[processedAnswers]</OutArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                              <ui:MultipleAssign sap2010:Annotation.AnnotationText="Update the status for future runs as we don't want to repeat previous attempts." DisplayName="Update submission status" sap:VirtualizedContainerService.HintSize="334,171" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                                <ui:MultipleAssign.AssignOperations>
                                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="x:Object">[submission.Item("Status")]</OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="x:Object">[outcome]</InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="x:Object">[submission.Item("Answers")]</OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="x:Object">[processedAnswers]</InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                  </scg:List>
                                </ui:MultipleAssign.AssignOperations>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:MultipleAssign>
                              <ui:WriteCsvFile Encoding="{x:Null}" AddHeaders="True" sap2010:Annotation.AnnotationText="Rewrite the entire CSV. Not the best approach, but this way we don't lose any data." DataTable="[allSubmissions]" Delimitator="Comma" DisplayName="Update tracking file" FilePath="[uploadTrackingFile]" sap:VirtualizedContainerService.HintSize="334,194" sap2010:WorkflowViewState.IdRef="WriteCsvFile_1">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:WriteCsvFile>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <ui:LogMessage DisplayName="Log skip submission" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;Skipping submission for &quot; + studentID.ToString + &quot;: already attempted&quot;]" />
                          </If.Else>
                        </If>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                </ui:ForEachRow>
              </Sequence>
            </If.Then>
          </If>
          <ui:LogMessage DisplayName="Log End of Processing" sap:VirtualizedContainerService.HintSize="909,91" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Starting submission processing&quot;]" />
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap2010:Annotation.AnnotationText="Validation failed, no point doing anything else." DisplayName="Invalidate State Actions" sap:VirtualizedContainerService.HintSize="376,214" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log failed validation" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Error" Message="[&quot;Validation failed - terminating upload&quot;]" />
        </Sequence>
      </If.Else>
    </If>
    <ui:LogMessage DisplayName="Log Process Completion" sap:VirtualizedContainerService.HintSize="1372,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Completed CrowdMark upload process&quot;]" />
  </Sequence>
</Activity>